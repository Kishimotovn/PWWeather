//
//  CitySearchWorkerTests.swift
//  PocketWorksWeather
//
//  Created by Anh Phan Tran on 27/07/2019.
//  Copyright (c) 2019 Anh Phan Tran. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import PocketWorksWeather
import Quick
import Nimble
import Promises

class CitySearchWorkerSpec: QuickSpec {
  // MARK: - Subject under test:
  var sut: CitySearchWorker!

  // MARK: - Spec:
  override func spec() {
    describe("CitySearchWorker") {
      beforeEach {
        self.sut = CitySearchWorker(cityListProvider: PWSession.shared)
      }

      context("when asked to search for city") {
        it("should ask provider for the city list") {
          let spy = StubbedCityListProvider()
          self.sut.cityListProvider = spy

          _ = self.sut.searchForCity(using: "some term")

          expect(spy.fetchCityListCalled).toEventually(beTrue())
        }

        it("should filter and return result if there is any") {
          let spy = StubbedCityListProvider()
          self.sut.cityListProvider = spy

          waitUntil { done in
            self.sut.searchForCity(using: "Ha").then { result in
              expect(result).toNot(beEmpty())
              done()
            }
          }
        }

        it("should filter and return empty result if there is none") {
          let spy = StubbedCityListProvider()
          self.sut.cityListProvider = spy
          
          waitUntil { done in
            self.sut.searchForCity(using: "some term").then { result in
              expect(result).to(beEmpty())
              done()
            }
          }
        }
      }
    }
  }
}
