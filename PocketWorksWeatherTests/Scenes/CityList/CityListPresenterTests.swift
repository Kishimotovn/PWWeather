//
//  CityListPresenterTests.swift
//  PocketWorksWeather
//
//  Created by Anh Phan Tran on 28/07/2019.
//  Copyright (c) 2019 Anh Phan Tran. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import PocketWorksWeather
import Quick
import Nimble

class CityListPresenterSpec: QuickSpec {
  // MARK: - Subject under test
  var sut: CityListPresenter!

  // MARK: - Test doubles
  class CityListDisplayLogicSpy: CityListDisplayLogic {
    var displayGetCityListCalled = false
    var displayGetCityListVM: CityList.GetCityList.ViewModel?

    func displayGetCityList(_ viewModel: CityList.GetCityList.ViewModel) {
      self.displayGetCityListCalled = true
      self.displayGetCityListVM = viewModel
    }
  }

  // MARK: - Spec:
  override func spec() {
    describe("CityListPresenter") {
      beforeEach {
        self.sut = CityListPresenter()
      }

      context("when present get city list") {
        it("should format list and ask view controller to display the formatted list") {
          let spy = CityListDisplayLogicSpy()
          self.sut.viewController = spy
          let response = CityList.GetCityList.Response(unitSystem: .metric)

          self.sut.presentGetCityList(response)

          expect(spy.displayGetCityListCalled).to(beTrue())
          expect(spy.displayGetCityListVM).toNot(beNil())
        }
      }
    }
  }
}
