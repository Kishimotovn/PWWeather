//
//  CityListInteractorTests.swift
//  PocketWorksWeather
//
//  Created by Anh Phan Tran on 28/07/2019.
//  Copyright (c) 2019 Anh Phan Tran. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import PocketWorksWeather
import Quick
import Nimble

class CityListInteractorSpec: QuickSpec {
  // MARK: - Subject under test:
  var sut: CityListInteractor!

  // MARK: - Test doubles:
  class CityListPresentationLogicSpy: CityListPresentationLogic {
    var presentGetCityCalled = false
    var presentGetCityResponse: CityList.GetCityList.Response?
    func presentGetCityList(_ response: CityList.GetCityList.Response) {
      self.presentGetCityCalled = true
      self.presentGetCityResponse = response
    }
  }

  // MARK: - Spec:
  override func spec() {
    describe("CityListInteractor") {
      beforeEach {
        self.sut = CityListInteractor()
      }

      context("when get city list") {
        it("should ask presenter to present the list") {
          let spy = CityListPresentationLogicSpy()
          self.sut.presenter = spy
          let request = CityList.GetCityList.Request()

          self.sut.getCityList(request)

          expect(spy.presentGetCityCalled).to(beTrue())
          expect(spy.presentGetCityResponse).toNot(beNil())
          expect(spy.presentGetCityResponse?.unitSystem).to(equal(PWSession.shared.unitSystem))
        }
      }
    }
  }
}
